"use strict";(()=>{var S=Object.defineProperty;var o=(n,e)=>S(n,"name",{value:e,configurable:!0});var u=class u extends Error{constructor(e){super(e),this.name="SdkMethodExecutionError"}};o(u,"SdkMethodExecutionError");var g=u;var y=class y extends Error{constructor(e,r){super(e),this.name="SdkConnectionError",r instanceof Error&&(this.stack=`${this.stack}
Caused by: ${r.stack}`)}};o(y,"SdkConnectionError");var a=y;var T=new Promise(()=>{});function l(n,e,r){let t,c=n.then(s=>(t=r?s[r]:s,t)).catch(s=>{if(s instanceof a)return T;throw s});return{path:e,realAsyncTarget:c,get realSyncedTarget(){return t},proxyTarget:s=>{let m=n.then(i=>{let d=typeof i=="function"?i()[r](...s):i[r](...s);return d&&typeof d.then=="function"?()=>d:d}).catch(i=>{if(i instanceof a)return T;throw new g(`Cannot call the method ".${r}()" at path "${e.join(".")}".
  - ${i.message}`)});return w(l(m,e))}}}o(l,"createSegment");function w(n){return new Proxy(n.proxyTarget,{get:(e,r)=>w(l(n.realAsyncTarget,[...n.path,r],r)),apply:(e,r,t)=>{let c=n.realSyncedTarget;return c?c(...t):e(t)}})}o(w,"createProxyLevel");function p(n){return w(l(n,[]))}o(p,"createLazyObjectProxy");var k=(()=>{let n={createScriptURL:e=>e};try{return window.trustedTypes?.createPolicy("miro-importer",{createScriptURL:e=>e})??n}catch{return n}})();function h(n){return new Promise((e,r)=>{let t=document.createElement("script");t.src=k.createScriptURL(n),t.onload=e,t.onerror=r,document.head.appendChild(t)})}o(h,"loadScript");var P="SDK_REQUEST_VERSION";async function x(){let n=Math.random().toString(36).slice(-10);return Promise.race([new Promise((e,r)=>setTimeout(()=>r(new a("SDK version fetching timeout")),1e4)),new Promise((e,r)=>{let t=o(c=>{let m=c.data?.payload?.find(({id:i})=>i===n)?.payload?.sdk;m&&e(new URL(m)),r(new a("SDK version can't be received")),window.removeEventListener("message",t)},"handleMessage");window.addEventListener("message",t),window.parent.postMessage({commandId:"sdkv2-plugin-message",payload:[{id:n,name:P}],msgId:n},"*")})])}o(x,"requestMiroVersion");async function M(){let n=new URL(document.location.href);try{let e=n.searchParams.get("_sdk"),r=e?new URL(e):await x();return await h(r.href),window.miro}catch(e){throw new a("Miro SDK is not connected. Ensure your app is running within the Miro environment.",e)}}o(M,"loadMiroSDK");var f=M();window.miro=p(f);f.catch(n=>console.error(n));})();
